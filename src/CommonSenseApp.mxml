<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:flex="flare.flex.*" 
	backgroundGradientAlphas="[1.0, 1.0]" backgroundGradientColors="[#FFFFFF, #FFFFFF]"
	initialize="{initScript()}"	xmlns:entity="commentspace.components.entity.*" xmlns:commentspace="commentspace.*" xmlns:site="site.*">
		
	<mx:HDividedBox width="100%" height="100%">
		<commentspace:VisLoader id="mainVis" left="0" width="100%" height="100%" visEntityName="Main Visualzation" 
			visReloaded="{setupPairing()}"
			creationComplete="{mainVis.source = mainVisSource}"  />
		<mx:VBox id="leftBar" width="410" height="100%" verticalGap="1">
		 	<commentspace:VisLoader id="commentVis" width="100%" height="100%" 
		 		horizontalScrollPolicy="off" verticalScrollPolicy="off" 
		 		visReloaded="{setupPairing()}"
				creationComplete="{commentVis.source = COMMENT_VIS_SOURCE;
					commentVis.namingToolbar.visible=false;
					commentVis.namingToolbar.includeInLayout=false;}" />
		</mx:VBox>		
 	</mx:HDividedBox>
 					
 	<mx:Canvas width="100%" height="100%" visible="{!(WorkspaceManager.instance.isWorkspaceLoaded)}" 
 		backgroundColor="#FFFFFF" backgroundAlpha="0.95">
		<mx:ProgressBar horizontalCenter="0" verticalCenter="0" 
			labelPlacement="left" indeterminate="true" 
			label="{'LOADING WORKSPACE: ' + WorkspaceManager.instance.workspace}"/>
	</mx:Canvas>
	<mx:Label text="linked" bottom="0" fontSize="9" fontStyle="italic" color="#EAEAEA" visible="{paired}"/>
 	
 	<mx:Script>
 		<![CDATA[
 			import mx.controls.ComboBox;
 			import mx.events.ListEvent;
 			import commentspace.events.LoginEvent;
 			import commentspace.events.EntityEvent;
 			import mx.controls.Alert;
 			import commentspace.managers.MasterSettingsManager;
 			import commentspace.etc.LoginPanel;
 			import commentspace.data.LoginManager;
 			import commentspace.Tags;
 			import commentspace.data.EntityFactory;
 			import commentspace.data.WorkspaceManager;
 		
 			/** -------- Login Info ---------- */
 			
			MasterSettingsManager.taggingEnabled = true;
 			//MasterSettingsManager.editingEnabled = false;
 			
 			//For some reason running locally with the remote version of CommentVis fails, but
 			// works when run from the server.
 			//private const COMMENT_VIS_SOURCE:String = "http://exp.sense.us/media/swf/CommentVis(FullIds).swf"
 			//private const COMMENT_VIS_SOURCE:String = "http://exp.sense.us/media/swf/CommentVis.swf"
 			//private const COMMENT_VIS_SOURCE:String = '../../commentspace.comments/bin-debug/CommentVis.swf';
 			private const COMMENT_VIS_SOURCE:String = 'CommentVis.swf';
 			
 			private const DEFAULT_WORKSPACE:String = "CommonSense";//"Empty";//"OlympicsTest";//"TimeUse";
			//private const DEFAULT_VIS:String = "";
 			//private const DEFAULT_VIS:String = "../../commonsensemaps/bin-debug/commonsensemaps.swf";
 			private const DEFAULT_VIS:String = "commonsensemaps.swf";
 			
 			//For testing purposes, we can set a default vis and workspace. 
 			// These will be replaced if a 'vis' or 'workspace' argument is 
 			// supplied via the query string.
 			public var mainVisSource:String = DEFAULT_VIS; 			
 			public var workspace:String = DEFAULT_WORKSPACE;
 			
 			[Bindable]
 			protected var paired:Boolean = false;
 			 						
 			/** -------- Methods ------------- */
 			protected function initScript():void{
 				
 				/* Security settings - should be constrained before deployment!
				 *  These settings allow this code to be loaded into and accessed by 
				 *  a Flash movie on ANY external server. *****************************/
				Security.allowDomain("*");
				Security.allowInsecureDomain("*");
				
				//get FlashVars
				var fv:Object = Application.application.parameters;
				
				//If the nest level is less than 4, assume this is being loaded 
				// as a standalone movie rather than in a scaffold - Login and set workspace
				if(nestLevel < 4){
					//show login panel unless hidden in flashvars
					if(!fv.hideLogin){
						var lp:LoginPanel = new LoginPanel();
						lp.percentWidth = 100;
						leftBar.addChildAt(lp,0);
					}
					//look for args from the address bar 
					var url:String = ExternalInterface.call("window.location.search.toString");
					if(url.length > 0) url=url.substr(1);
					var args:Object = {};
					for each(var a:String in url.split("&")){
						var aa:Array = a.split("=");
						if(aa.length == 2 && aa[0].length > 0) args[aa[0].toLowerCase()] = aa[1];
					}
					
					//set the vis and workspace from the flashvars or from url args if specified
					if(fv.vis) mainVisSource = fv.vis;
					else if(args.vis) mainVisSource = args.vis;
					if(fv.workspace) workspace = fv.workspace;
					else if(args.workspace) workspace = args.workspace;
					
					//set the workspace
					WorkspaceManager.instance.workspace = workspace;
					MasterSettingsManager.taggingEnabled = false;
				}
			}

 			protected function setupPairing():void{
				if(mainVis.isLoaded && commentVis.isLoaded && !paired){
					commentVis.statefulVis.pairedVisEntity = mainVis;

					mainVis.addEventListener(EntityEvent.ID_CHANGE,function(e:EntityEvent):void{
							if(mainVis.workspaceMatch) commentVis.statefulVis.pairedIds = [mainVis.workspaceMatch.id];
							else commentVis.statefulVis.pairedIds = [];
						});
					
					if(mainVis.workspaceMatch)	commentVis.statefulVis.pairedIds = [mainVis.workspaceMatch.id];
					
					//Listener to focus the 
					commentVis.statefulVis.addEventListener(EntityEvent.ENTITY_FOCUSED,function(e:EntityEvent):void{
							WorkspaceManager.instance.log("loaded vis from comment:",(e.entity && e.entity.id ? e.entity.id : null));
							mainVis.data = e.entity;
						});
					
					paired = true;
					
					//commentVis.statefulVis.displayPromptPopUp("Levels of CO are much higher here than earlier in the track. " + 
					//		"Did you notice any different here?");
				} 
			}
			
			
 		]]>
 	</mx:Script>	
</mx:Application>
