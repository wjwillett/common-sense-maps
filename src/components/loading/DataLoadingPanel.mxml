<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" backgroundColor="#FFFFFF" 
	borderStyle="solid" cornerRadius="10" borderColor="#FFFFFF" 
	paddingBottom="25" paddingLeft="25" paddingRight="25" paddingTop="25" width="700">
	<mx:RadioButtonGroup id="radioGroup"/>
	<mx:Label text="load additional data" color="#62D000" fontFamily="Helvetica" fontSize="30"/>
	
	<mx:RadioButton label="Recommended Datasets" id="recommendedRadio" selected="true"  
		group="{radioGroup}" value='recommended'  fontSize="16" />
	<mx:DataGrid id="grid" width="100%" height="160" initialize="{setupGrid()}" showHeaders="false"
 		includeInLayout="{recommendedRadio.selected}" visible="{recommendedRadio.selected}">
		<mx:columns>
                <mx:DataGridColumn dataField="name" headerText="Dataset"/>
                <!--<mx:DataGridColumn dataField="date_time" headerText="Date"/>-->
                <!--<mx:DataGridColumn dataField="source_name" headerText="Source"/>-->
            </mx:columns>
	</mx:DataGrid>
	
	<mx:RadioButton id="customRadio" group="{radioGroup}" value="custom" 
		label="Load a Custom Dataset" fontSize="16"/>
	<mx:HBox width="100%" includeInLayout="{customRadio.selected}" visible="{customRadio.selected}">
		<mx:List dataProvider="{BADGES}" id="badgeIdList" 
			labelField="name" width="82" height="100%" allowMultipleSelection="true"/>
		<mx:List dataProvider="{POLLUTANTS}" id="pollutantList" 
			labelField="pollutant" height="100%" selectedIndex="0"></mx:List>
		<mx:VBox height="100%" width="180">
			<mx:DateChooser id="dateChooser" borderColor="#FFFFFF" selectedDate="{new Date()}"
				allowMultipleSelection="true" allowDisjointSelection="false" showToday="false" width="180"/>
			<mx:Text text="{(dateChooser.selectedRanges[0].rangeStart as Date).toLocaleDateString()
			       } - {(dateChooser.selectedRanges[0].rangeEnd as Date).toLocaleDateString()}" width="177"/>
		</mx:VBox>
	</mx:HBox>
	
	<mx:RadioButton id="queryRadio" group="{radioGroup}" value="query" selected="false"  
		label="Specify a Custom Query (Advanced)" fontSize="16"/>
	<mx:TextInput width="100%" id="queryInput" text="{BASE_DB_QUERY_URL +
		'?badge_id=00000000000A&amp;reading=mco&amp;start_time=' + '&amp;end_time='}" 
		visible="{queryRadio.selected}" includeInLayout="{queryRadio.selected}"/>
	<mx:HBox width="100%" horizontalAlign="right">
		<mx:Button id="loadButton" label="Load" click="{onLoadClick()}" enabled="{!customRadio.selected || badgeIdList.selectedIndex &gt; -1 &amp;&amp;  pollutantList.selectedIndex &gt; -1}"/>
		<mx:Button id="cancelButton" label="Cancel" click="{onCancelClick()}"/>
	</mx:HBox>
	
	<mx:Script>
		<![CDATA[
			import etc.AirQualityColors;
			import mx.collections.ArrayCollection;
		
			protected const DATA_INDEX_XML_URL:String = "http://www.eecs.berkeley.edu/~willettw//temp/CommonSenseDataIndex.xml";
			
			public static const BASE_DB_QUERY_URL:String = "http://www.commonsensecommunity.com/badgedata/"; 	//production server
			//public static const BASE_DB_QUERY_URL:String = "http://12.46.129.13:8080/badgedata/"; 				//development server
			
			
			protected const recommendedQueries:Array = [
				{name:"Badge 4 CO (since June 29th)",
					url:BASE_DB_QUERY_URL + "?badge_id=000000000004&reading=mco&start_time=1246258800" + 
						"&end_time=" + int(new Date().time / 1000),
					reading:"co"},
				{name:"Badge 10 CO (since June 29th)",
					url:BASE_DB_QUERY_URL + "?badge_id=00000000000A&reading=mco&start_time=1246258800" + 
						"&end_time=" + int(new Date().time / 1000),
					reading:"co"},
				{name:"All Badges CO (past 24 hours)",
					url:BASE_DB_QUERY_URL + "?reading=mco&start_time=" + 
						int((new Date().time) / 1000 - 24 * 3600) + "&end_time=" + int(new Date().time / 1000),
					reading:"co"},
				{name:"All Badges CO (past week)",
					url:BASE_DB_QUERY_URL + "?reading=mco&start_time=" + 
						int((new Date().time) / 1000 - 7 * 24 * 3600) + "&end_time=" + int(new Date().time / 1000),
					reading:"co"},
				{name:"West Oakland PM (15 May 2009)",
					url:"http://www.commonsensecommunity.com/data/2009-05-14%20(West%20Oakland%20PM%20+%20GPS).csv",
					reading:"pm25"}
				];					
					
			
			
			protected const BADGES:Array = [
				{name:"Badge 1",id:'000000000001'},
				{name:"Badge 2",id:'000000000002'},
				{name:"Badge 3",id:'000000000003'},
				{name:"Badge 4",id:'000000000004'},
				{name:"Badge 5",id:'000000000005'},
				{name:"Badge 6",id:'000000000006'},
				{name:"Badge 7",id:'000000000007'},
				{name:"Badge 8",id:'000000000008'},
				{name:"Badge 9",id:'000000000009'},
				{name:"Badge 10",id:'00000000000A'},
				{name:"Badge 11",id:'00000000000B'},
				{name:"Badge 12",id:'00000000000C'},
				{name:"Badge 13",id:'00000000000D'},
				{name:"Badge 14",id:'00000000000E'},
				{name:"Badge 15",id:'00000000000F'}];
				
			protected const POLLUTANTS:Array = [
				{pollutant:"Carbon Monoxide (8-hour thresholds)",abbreviation:"co",db:'mco',multiplier:0.001},
				//{pollutant:"Ozone (1-hour thresholds)",abbreviation:"ozone8",db:'so3',multiplier:0.001},
				//{pollutant:"Ozone (8-hour thresholds)",abbreviation:"ozone1",db:'o3',multiplier:0.001},
				//{pollutant:"Particulate Matter 2.5 (24-hour thresholds)",abbreviation:"pm25",db:,multiplier:},
				//{pollutant:"Particulate Matter 10 (24-hour thresholds)",abbreviation:"pm10",db:,multiplier:},
				//{pollutant:"Sulfur Dioxide (24-hour thresholds)",abbreviation:"so2",db:'so2',multiplier:0.001}
				];
				
				
			public var onLoadClick:Function;
			public var onCancelClick:Function;
		
		
			public function getSelectedInfo():Array{
				var info:Array = []
				if(radioGroup.selectedValue=='recommended'){
					if(grid.selectedItems){
						for each(var g:Object in grid.selectedItems){
							info.push(g);
						} 		
					}
				}
				else if(radioGroup.selectedValue=='custom'){
					for each(var b:Object in badgeIdList.selectedItems){
						info.push({name:buildName(b.name),
							url:buildURL(b.id),
							reading:pollutantList.selectedItem.abbreviation});
					}
				}
				else if(radioGroup.selectedValue=='query'){
					info.push({name:queryInput.text});
				}
				return info; 
			}	
					
			
			
			protected function buildName(badgeName:String):String{
				var name:String = badgeName + " " + pollutantList.selectedItem.pollutant;
				if(dateChooser.selectedRanges.length > 0 && dateChooser.selectedRanges[0]){
					name += (" (" + (dateChooser.selectedRanges[0].rangeStart as Date).toLocaleDateString() + " - " + 
			       			(dateChooser.selectedRanges[0].rangeEnd as Date).toLocaleDateString() + ")");
				}				 		
				return name;
			}
			
			
			protected function buildURL(badgeId:String=null):String{
				var url:String = BASE_DB_QUERY_URL + "?badge_id=" + (badgeId ? badgeId : badgeIdList.selectedItem.id) + 
				 		"&reading=" + pollutantList.selectedItem.db; 
				if(dateChooser.selectedRanges.length > 0 && dateChooser.selectedRanges[0]){
					url += "&start_time=" + (dateChooser.selectedRanges[0].rangeStart as Date).time / 1000 +
						"&end_time=" + (dateChooser.selectedRanges[0].rangeEnd as Date).time / 1000 + 3600 * 24;
				}				 		
				return url;
			}
			
			

			
			protected function setupGrid():void{
				grid.dataProvider = recommendedQueries;
				/*var req
				uest:URLRequest = new URLRequest(DATA_INDEX_XML_URL);
				var loader:URLLoader = new URLLoader(request);
				
				loader.addEventListener(Event.COMPLETE,function(e:Event):void{
						var gridXML:XMLList = XMLList(loader.data);
						grid.dataProvider = gridXML..item;
					});*/
			}
			
			
			
			
		]]>
	</mx:Script>
	
	
</mx:VBox>
